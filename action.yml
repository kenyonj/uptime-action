name: 'Uptime'
description: 'Checks if a resource is available and if it has changed since the last check'
author: 'Justin Kenyon'
branding:
  icon: 'archive'
  color: 'gray-dark'
inputs:
  url:
    description: 'publicly accessible URL (ex. `https://github.com/kenyonj/actions-uptime.git`)'
    required: true
  yaml_output:
    description: 'A boolean value to indicate whether or not this action will write to a YAML file to keep track of how long the resource has been available'
    required: true
    default: true
  pushover_user_key:
    description: 'A string value for your pushover user key, use secrets to protect this information'
    required: false
  pushover_token:
    description: 'A string value for your pushover token, use secrets to protect this information'
    required: false
  github_token:
    description: 'The GitHub token to use for updating uptime.yml file'
    required: false
outputs:
  change_detected:
    description: 'A boolean value to indicate that a change was detected on the resource'
    value: ${{ steps.cache.outputs.cache-hit == 'true' }}
  resource_is_available:
    description: 'A boolean value to indicate that the resource is up and responding to GET requests'
    value: ${{ steps.fetch.conclusion == 'success' }}
  notification_sent:
    description: 'A boolean value to indicate that a notification was sent to the desired services'
    value: ${{ steps.pushover-notification.conclusion == 'success' }}
runs:
  using: "composite"
  steps:
    - name: Fetch data
      id: fetch
      run: curl "${{ inputs.url }}" -o data.json
      shell: bash

    - name: Fetch Cache
      id: cache
      uses: actions/cache@v2
      with:
        path: data.json
        key: ${{ hashFiles('data.json') }}

    - name: Create uptime.yml if needed
      run: "[ -f ${{ github.workspaces }}/uptime.yml ] && touch ${{ github.workspace }}/uptime.yml"
      shell: bash

    - name: Pushover Notification
      id: pushover-notification
      run: curl -s --form-string "token=${{ inputs.pushover_token }}" --form-string "user=${{ inputs.pushover_user_key }}" --form-string "message=uptime-action has run" https://api.pushover.net/1/messages.json
      if: ${{ inputs.pushover_token && inputs.pushover_user_key }}
      shell: bash
      
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d %T')"
      shell: bash
        
    - name: Write last changed YAML
      uses: mikefarah/yq@master
      with:
        cmd: yq eval -i '.sites.last_changed = "${{ steps.date.outputs.date }}"' '${{ github.workspace }}/uptime.yml'
      if: ${{ inputs.github_token && steps.cache.outputs.cache-hit != 'true' }}

    - name: Write down since YAML
      uses: mikefarah/yq@master
      with:
        cmd: yq eval -i '.sites.down_since = "${{ steps.date.outputs.date }}"' '${{ github.workspace }}/uptime.yml'
      if: ${{ inputs.github_token && steps.fetch.conclusion != 'success' }}

    - name: Write up since YAML
      uses: mikefarah/yq@master
      with:
        cmd: yq eval -i '.sites.up_since = "${{ steps.date.outputs.date }}"' '${{ github.workspace }}/uptime.yml'
      if: ${{ inputs.github_token && steps.fetch.conclusion == 'success' }}

    - name: Write url YAML
      uses: mikefarah/yq@master
      with:
        cmd: yq eval -i '.sites.url = "${{ inputs.url }}"' '${{ github.workspace }}/uptime.yml'
      if: ${{ inputs.github_token }}

    - run: git config --local user.email "action@github.com"
      shell: bash
      if: ${{ steps.write-yaml.conclusion == 'success' }}
    - run: git config --local user.name "GitHub Action"
      shell: bash
      if: ${{ steps.write-yaml.conclusion == 'success' }}
    - run: git add .
      shell: bash
      if: ${{ steps.write-yaml.conclusion == 'success' }}
    - run: git commit -m "Uptime file updated"
      shell: bash
      if: ${{ steps.write-yaml.conclusion == 'success' }}
    - run: "git push https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD"
      shell: bash
      if: ${{ steps.write-yaml.conclusion == 'success' }}
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
